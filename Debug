
rwildcard=$(foreach d,$(wildcard $(1:=/*)),$(call rwildcard,$d,$2) $(filter $(subst *,%,$2),$d))

SRC_DIR := src
OBJ_DIR := obj
BIN_DIR := bin

GLAD = obj/vendor/GLAD/glad.o

EXE := bin/linux/Debug/main
SRC := $(call rwildcard,$(SRC_DIR),*.cpp)
SRC += $(GLAD)

OBJ := $(SRC:$(SRC_DIR)/%.cpp=$(OBJ_DIR)/%.o)

#CPPFLAGS := -include include/mypch.h -I include/ -I include/code -I include/vendor -MMD -MP `pkg-config --cflags gtk+-3.0` 
#CFLAGS   := -fsanitize=address -Wall -Wextra -Wno-unused-parameter -std=c++20 -g -Wno-unused-variable -Wno-unused-function -fno-omit-frame-pointer
#LDFLAGS  := -g -Llibg
#LDLIBS   := -fsanitize=address -rpath ./lib/linux -rpath . -Llib/linux -lassimp -lglfw3 -lnfd -lpthread -ldl -lX11 `pkg-config --libs gtk+-3.0` -Llib/linux/physx -lPhysXExtensions_static_64 -lPhysX_static_64 -lPhysXPvdSDK_static_64 -lPhysXVehicle_static_64 -lPhysXCharacterKinematic_static_64 -lPhysXCooking_static_64 -lPhysXCommon_static_64 -lPhysXFoundation_static_64 -lSnippetRender_static_64 -lSnippetUtils_static_64 

CPPFLAGS := -include include/mypch.h -I include/ -I include/code -I include/vendor -MMD -MP `pkg-config --cflags gtk+-3.0` 
CFLAGS   := -Wall -Wextra -Wno-unused-parameter -std=c++20 -g -Wno-unused-variable -Wno-unused-function -fno-omit-frame-pointer
LDFLAGS  := -g -Llibg
LDLIBS   := -rpath ./lib/linux -rpath . -Llib/linux -lassimp -lglfw3 -lnfd -lpthread -ldl -lX11 `pkg-config --libs gtk+-3.0` -Llib/linux/physx -lPhysXExtensions_static_64 -lPhysX_static_64 -lPhysXPvdSDK_static_64 -lPhysXVehicle_static_64 -lPhysXCharacterKinematic_static_64 -lPhysXCooking_static_64 -lPhysXCommon_static_64 -lPhysXFoundation_static_64 -lSnippetRender_static_64 -lSnippetUtils_static_64 




.PHONY: all clean

all: $(EXE)

$(EXE): $(OBJ) | $(BIN_DIR)
	@$(CXX) $(LDFLAGS) $^ $(LDLIBS) -o $@
	$(info $@)

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp | $(OBJ_DIR)
	@$(CXX) $(CPPFLAGS) $(CFLAGS) -c $< -o $@
	$(info $@)

clean:
	@$(RM) -rv $(BIN_DIR) $(OBJ_DIR)


-include $(OBJ:.o=.d)
